#include <iostream>
#include <vector>
#include <string.h>
#include <string>
using namespace std;
int a[30][30], b[30];
int max = 26, maxn = 0;
vector<int>best;
void dfs(vector<int>tmp) {
	int len = tmp.size();
	for (int i = 0; i < len; i++) {

	}
}

int main() {
	string str;
	while (cin >> str && str != "#") {

		int len = str.length();
		string str1 = "", str2 = ""; int node = 0;
		best.clear(); max = 26;
		for (int i = 0; i < len; i++) {
			if (str[i] == ':')node = 1;
			else if (str[i] == ';') {
				int sublen = str.length();
				for (int j = 0; j < sublen; j++) {
					a[str1[0]-'A'][str2[j]-'A'] = 1; a[str2[j]-'A'][str1[0]-'A'] = 1;
					if (maxn < str1[0]-'A')maxn = str1[0]-'A';
					if (maxn < str2[j]-'A')maxn = str2[j]-'A';
				}
				str1 = str2 = "";
				node = 0;
			}
			else if (!node)str1 += str[i];
			else str2 += str[i];
		}
		vector<int> tmp;
		dfs(tmp);
	}
}